成都麻将　算法思维：

定义：牌 = 张花点 (张数，花色，点子）

源数据： 牌[] （最多14张，碰/杠之后会减少）

根据规则，通常情况下（特殊的七对等除外），有：
	砍（花点相同：三张），
	顺（花相同，点紧靠：三张），
	对（花点相同：两张），
	单（任意单张）
这几个常见分组规则

判胡条件： （游戏服务只做判胡处理）

	14张：	对 砍 砍 砍 砍
			对 砍 砍 砍 顺
			对 砍 砍 顺 顺
			对 砍 顺 顺 顺
			对 顺 顺 顺 顺
			对 对 对 对 对 对 对

	11张：	对 砍 砍 砍
			对 砍 砍 顺
			对 砍 顺 顺
			对 顺 顺 顺

	8张：	对 砍 砍
			对 砍 顺
			对 顺 顺

	5张：	对 砍
			对 顺

	2张：	对

	同时：成都麻将要求＂缺一门＂，即整副牌只能同时存在２种花色才可胡牌

思路：
	根据上面的规则，首先判断是否只有两种花色，
	再看手牌总张数，然后排序，
	最后根据每种组合，开始匹配，完全匹配成功　则认为胡了

做法1：

1. 首先按　花,点 排序　并保存
2. 判断花色是否只有２种
3. 递归开始：
3.10 准备结果分组容器：（按张数，判胡条件来，完型填空的效果，再加上剩牌容器）
	（根据分析发现，判胡条件至少须满足　有１对，所以）
3.2 判断特殊牌型：７对（扫　牌的所有＂张＂是否为偶数即可），满足则将组合写入结果容器
3.3	扫剩牌，得到所有　对的可能，并从已排序　牌[] 中减去这个 对，纳入　组合[]
3.4		扫剩牌，得到所有　砍的可能，并从已排序　牌[] 中减去这个 砍，纳入　组合[]
3.5		扫剩牌，得到所有　顺的可能，并从已排序　牌[] 中减去这个 顺，纳入　组合[]
3.6		对　组合[]　排序（对 砍 顺），将引用存入分组的结果容器（同时判断是否重复，重复则打断递归）
3.7		如果牌还有剩，跳至 3.4



算番规则：

算番条件：

思路：在上面判胡思路基础上，将所有可胡的牌型，记录下来，最后看有哪几种胡法，再取每一种胡法对应的所有的番数，最后看哪一种胡法番最高

